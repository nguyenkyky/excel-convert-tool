{"ast":null,"code":"import _objectSpread from\"/Users/kynguyen/Documents/WorkSpace/React/excel-convert/convert-tool/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _regeneratorRuntime from\"/Users/kynguyen/Documents/WorkSpace/React/excel-convert/convert-tool/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/kynguyen/Documents/WorkSpace/React/excel-convert/convert-tool/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/kynguyen/Documents/WorkSpace/React/excel-convert/convert-tool/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useRef,useState}from\"react\";import{useDropzone}from\"react-dropzone\";import*as XLSX from\"xlsx\";import{saveAs}from\"file-saver\";import JSZip from\"jszip\";import\"./style.scss\";import Button from\"react-bootstrap/Button\";import{FormControl}from\"react-bootstrap\";import axios from\"axios\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ExcelTool=function ExcelTool(){var _ref;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedFile=_useState2[0],setSelectedFile=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),convertedTxtLinks=_useState4[0],setConvertedTxtLinks=_useState4[1];var _useState5=useState(\"Converted\"),_useState6=_slicedToArray(_useState5,2),zipFileName=_useState6[0],setZipFileName=_useState6[1];var jsonDataRef=useRef([]);var fieldIndexesRef=useRef([]);var onDrop=function onDrop(acceptedFiles){if(acceptedFiles&&acceptedFiles.length>0){var file=acceptedFiles[0];if(file.name.endsWith(\".xlsx\")||file.name.endsWith(\".xls\")){setSelectedFile(acceptedFiles[0]);setConvertedTxtLinks([]);// Reset the converted txt links\nsetZipFileName(getBaseFileName(acceptedFiles[0].name));// Đặt tên mặc định file ZIP giống với file excel\n}else{alert(\"Chọn đúng định dạng file (.xlsx hoặc .xls)\");}}};// Lấy tên file excel\nfunction getBaseFileName(fileName){var lastDotIndex=fileName.lastIndexOf(\".\");if(lastDotIndex!==-1){return fileName.substring(0,lastDotIndex);}return fileName;}var gradeLevels=[\"<Preschool>\",\"<Kindergarten>\",\"<Grade 1>\",\"<Grade 2>\",\"<Grade 3>\",\"<Grade 4>\",\"<Grade 5>\",\"<Grade 6>\",\"<Grade 7>\",\"<Grade 8>\",\"<Grade 9>\",\"<Grade 10>\",\"<Grade 11>\",\"<Grade 12>\"];var newGradeLevels=[\"Preschool\",\"Kindergarten\",\"Grade 1\",\"Grade 2\",\"Grade 3\",\"Grade 4\",\"Grade 5\",\"Grade 6\",\"Grade 7\",\"Grade 8\",\"Grade 9\",\"Grade 10\",\"Grade 11\",\"Grade 12\"];var convertExcelToTxt=function convertExcelToTxt(){if(selectedFile){var reader=new FileReader();reader.onload=function(event){var data=new Uint8Array(event.target.result);var workbook=XLSX.read(data,{type:\"array\"});var firstSheet=workbook.Sheets[workbook.SheetNames[0]];var jsonData=XLSX.utils.sheet_to_json(firstSheet,{header:1});jsonDataRef.current=XLSX.utils.sheet_to_json(firstSheet,{header:1});// Lấy các fields ở hàng đầu tiên\nvar headerRow=jsonData[0];var fields=[\"Title\",\"Tags\",\"Topics\",\"CCSS\",\"Categories\",\"Grade\",\"Description\"];// Lấy dữ liệu của Start grade và End grade\nvar gradeFields=[\"Start grade\",\"End grade\"];var fieldIndexes=findFieldIndexes(headerRow,fields);fieldIndexesRef.current=findFieldIndexes(headerRow,fields);var gradeFieldIndexes=findFieldIndexes(headerRow,gradeFields);var txtFileLinks=[];jsonData.slice(1).forEach(function(rowData,rowIndex){// Kiểm tra xem có dữ liệu trong dòng rowData hay không thì mới convert\nvar hasData=fields.some(function(field){return rowData[fieldIndexes[field]]!==undefined&&rowData[fieldIndexes[field]]!==\"\";});if(hasData){var startGrade=rowData[gradeFieldIndexes[\"Start grade\"]];var endGrade=rowData[gradeFieldIndexes[\"End grade\"]];var gradeRange=[];// console.log(startGrade, endGrade);\n// Lấy khoảng Grade\nif(startGrade&&endGrade){var startIndex=gradeLevels.indexOf(startGrade);var endIndex=gradeLevels.indexOf(endGrade);if(startIndex===-1||endIndex===-1){startIndex=newGradeLevels.indexOf(startGrade);endIndex=newGradeLevels.indexOf(endGrade);gradeRange=gradeLevels.slice(startIndex,endIndex+1);}else{gradeRange=gradeLevels.slice(startIndex,endIndex+1);//   console.log(gradeRange);\n}}var title=rowData[fieldIndexes[\"Title\"]];if(!title)return;// Lấy dữ liệu trên từng hàng ứng với các trường trong mảng fields[]\nvar txtContentArray=fields.map(function(field){var cellValue=rowData[fieldIndexes[field]]||\"\";if(field===\"Tags\"||field===\"Topics\"||field===\"CCSS\"||field===\"Categories\"){if(cellValue){var dataParts=cellValue.split(\",\").map(function(item){return\"<\".concat(item.trim(),\">\");});return\"\".concat(field,\":\").concat(dataParts.join(\", \"));}}if(field===\"Grade\"){return\"Grade:\".concat(gradeRange.join(\", \"));}else{return\"\".concat(field,\":\").concat(cellValue?\"<\".concat(cellValue,\">\"):\"\");}});var txtBlob=new Blob([txtContentArray.join(\"\\n\")],{type:\"text/plain\"});var txtDownloadLink=URL.createObjectURL(txtBlob);txtFileLinks.push({title:title,link:txtDownloadLink});}});setConvertedTxtLinks(txtFileLinks);};reader.readAsArrayBuffer(selectedFile);}};// Đánh dấu vị trí của các phần tử trong fields(đánh dấu vị trí cột)\nvar findFieldIndexes=function findFieldIndexes(headerRow,fields){var fieldIndexes={};headerRow.forEach(function(cellValue,columnIndex){if(fields.includes(cellValue)){fieldIndexes[cellValue]=columnIndex;}});return fieldIndexes;};// Đoạn này warning\nvar _useDropzone=useDropzone({onDrop:onDrop,accept:\".xlsx, .xls\",maxFiles:1}),getRootProps=_useDropzone.getRootProps,getInputProps=_useDropzone.getInputProps;var downloadZip=function downloadZip(){return(_ref=_ref||_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var zip;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:if(!(convertedTxtLinks.length>0)){_context.next=5;break;}zip=new JSZip();_context.next=4;return Promise.all(convertedTxtLinks.map(function(_ref2,index){var title=_ref2.title,link=_ref2.link;var formatTitle=title.replace(/[/\\\\?%*:|\"<>]/g,\"-\");// Thay thế các ký tự không hợp lệ khi đặt tên bằng dấu gạch ngang\n// const title = jsonDataRef.current[index+1][fieldIndexesRef.current[\"Title\"]];\n// const fileName = title ? `${title}.txt` : `data_${index + 1}.txt`; // Đặt tên tệp txt\nreturn fetch(link).then(function(response){return response.blob();}).then(function(blob){zip.file(\"\".concat(formatTitle,\".txt\"),blob);});}));case 4:zip.generateAsync({type:\"blob\"}).then(function(content){saveAs(content,\"\".concat(zipFileName,\".zip\"));});case 5:case\"end\":return _context.stop();}},_callee);}))).apply(this,arguments);};return/*#__PURE__*/_jsxs(\"div\",{className:\"convert-tool\",children:[/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({},getRootProps()),{},{className:\"dropzone\",children:[/*#__PURE__*/_jsx(\"input\",_objectSpread({},getInputProps())),/*#__PURE__*/_jsx(\"p\",{children:\"K\\xE9o th\\u1EA3 file Excel, ho\\u1EB7c Click \\u0111\\u1EC3 t\\u1EA3i l\\xEAn\"})]})),selectedFile&&/*#__PURE__*/_jsxs(\"div\",{className:\"selected-file\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[\"File \\u0111\\xE3 ch\\u1ECDn: \",selectedFile.name]}),/*#__PURE__*/_jsx(Button,{className:\"text-white\",onClick:convertExcelToTxt,children:\"Chuy\\u1EC3n \\u0111\\u1ED5i sang txt\"})]}),convertedTxtLinks.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"download\",children:[/*#__PURE__*/_jsxs(\"p\",{style:{fontSize:\"13px\"},children:[\"Converted \",selectedFile.name]}),/*#__PURE__*/_jsx(\"p\",{children:\"Nh\\u1EADp t\\xEAn ZIP file\"}),/*#__PURE__*/_jsx(\"input\",{className:\"name-form\",type:\"text\",value:zipFileName,onChange:function onChange(e){return setZipFileName(e.target.value);}}),/*#__PURE__*/_jsx(\"p\",{children:\"T\\u1EA3i v\\u1EC1 ZIP file\"}),/*#__PURE__*/_jsx(Button,{className:\"text-white\",onClick:downloadZip,children:\"Download\"})]})]});};export default ExcelTool;","map":{"version":3,"names":["React","useRef","useState","useDropzone","XLSX","saveAs","JSZip","Button","FormControl","axios","jsx","_jsx","jsxs","_jsxs","ExcelTool","_ref","_useState","_useState2","_slicedToArray","selectedFile","setSelectedFile","_useState3","_useState4","convertedTxtLinks","setConvertedTxtLinks","_useState5","_useState6","zipFileName","setZipFileName","jsonDataRef","fieldIndexesRef","onDrop","acceptedFiles","length","file","name","endsWith","getBaseFileName","alert","fileName","lastDotIndex","lastIndexOf","substring","gradeLevels","newGradeLevels","convertExcelToTxt","reader","FileReader","onload","event","data","Uint8Array","target","result","workbook","read","type","firstSheet","Sheets","SheetNames","jsonData","utils","sheet_to_json","header","current","headerRow","fields","gradeFields","fieldIndexes","findFieldIndexes","gradeFieldIndexes","txtFileLinks","slice","forEach","rowData","rowIndex","hasData","some","field","undefined","startGrade","endGrade","gradeRange","startIndex","indexOf","endIndex","title","txtContentArray","map","cellValue","dataParts","split","item","concat","trim","join","txtBlob","Blob","txtDownloadLink","URL","createObjectURL","push","link","readAsArrayBuffer","columnIndex","includes","_useDropzone","accept","maxFiles","getRootProps","getInputProps","downloadZip","_asyncToGenerator","_regeneratorRuntime","mark","_callee","zip","wrap","_callee$","_context","prev","next","Promise","all","_ref2","index","formatTitle","replace","fetch","then","response","blob","generateAsync","content","stop","apply","arguments","className","children","_objectSpread","onClick","style","fontSize","value","onChange","e"],"sources":["/Users/kynguyen/Documents/WorkSpace/React/excel-convert/convert-tool/src/App.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDropzone } from \"react-dropzone\";\nimport * as XLSX from \"xlsx\";\nimport { saveAs } from \"file-saver\";\nimport JSZip from \"jszip\";\nimport \"./style.scss\";\nimport Button from \"react-bootstrap/Button\";\nimport { FormControl } from \"react-bootstrap\";\nimport axios from \"axios\";\n\n\nconst ExcelTool = () => {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [convertedTxtLinks, setConvertedTxtLinks] = useState([]);\n    const [zipFileName, setZipFileName] = useState(\"Converted\");\n    const jsonDataRef = useRef([]);\n    const fieldIndexesRef = useRef([]);\n\n    const onDrop = (acceptedFiles) => {\n        if (acceptedFiles && acceptedFiles.length > 0) {\n            \n            const file = acceptedFiles[0];\n            if (file.name.endsWith(\".xlsx\") || file.name.endsWith(\".xls\")) {\n                setSelectedFile(acceptedFiles[0]);\n                setConvertedTxtLinks([]); // Reset the converted txt links\n                setZipFileName(getBaseFileName(acceptedFiles[0].name)); // Đặt tên mặc định file ZIP giống với file excel\n            } else {\n                alert(\"Chọn đúng định dạng file (.xlsx hoặc .xls)\");\n            }\n        }\n    };\n\n\n\n    // Lấy tên file excel\n    function getBaseFileName(fileName) {\n        const lastDotIndex = fileName.lastIndexOf(\".\");\n        if (lastDotIndex !== -1) {\n            return fileName.substring(0, lastDotIndex);\n        }\n        return fileName;\n    }\n    const gradeLevels = [\n        \"<Preschool>\",\n        \"<Kindergarten>\",\n        \"<Grade 1>\",\n        \"<Grade 2>\",\n        \"<Grade 3>\",\n        \"<Grade 4>\",\n        \"<Grade 5>\",\n        \"<Grade 6>\",\n        \"<Grade 7>\",\n        \"<Grade 8>\",\n        \"<Grade 9>\",\n        \"<Grade 10>\",\n        \"<Grade 11>\",\n        \"<Grade 12>\",\n    ];\n    const newGradeLevels = [\n        \"Preschool\",\n        \"Kindergarten\",\n        \"Grade 1\",\n        \"Grade 2\",\n        \"Grade 3\",\n        \"Grade 4\",\n        \"Grade 5\",\n        \"Grade 6\",\n        \"Grade 7\",\n        \"Grade 8\",\n        \"Grade 9\",\n        \"Grade 10\",\n        \"Grade 11\",\n        \"Grade 12\",\n    ];\n\n    const convertExcelToTxt = () => {\n        if (selectedFile) {\n            const reader = new FileReader();\n            reader.onload = (event) => {\n                const data = new Uint8Array(event.target.result);\n                const workbook = XLSX.read(data, { type: \"array\" });\n                const firstSheet = workbook.Sheets[workbook.SheetNames[0]];\n                const jsonData = XLSX.utils.sheet_to_json(firstSheet, {\n                    header: 1,\n                });\n                jsonDataRef.current = XLSX.utils.sheet_to_json(firstSheet, {\n                    header: 1,\n                });\n\n                // Lấy các fields ở hàng đầu tiên\n                const headerRow = jsonData[0];\n\n                const fields = [\n                    \"Title\",\n                    \"Tags\",\n                    \"Topics\",\n                    \"CCSS\",\n                    \"Categories\",\n                    \"Grade\",\n                    \"Description\",\n                ];\n\n                // Lấy dữ liệu của Start grade và End grade\n                const gradeFields = [\"Start grade\", \"End grade\"];\n                const fieldIndexes = findFieldIndexes(headerRow, fields);\n                fieldIndexesRef.current = findFieldIndexes(headerRow, fields);\n                const gradeFieldIndexes = findFieldIndexes(\n                    headerRow,\n                    gradeFields\n                );\n\n                const txtFileLinks = [];\n\n                jsonData.slice(1).forEach((rowData, rowIndex) => {\n                    // Kiểm tra xem có dữ liệu trong dòng rowData hay không thì mới convert\n                    const hasData = fields.some(\n                        (field) =>\n                            rowData[fieldIndexes[field]] !== undefined &&\n                            rowData[fieldIndexes[field]] !== \"\"\n                    );\n                    if (hasData) {\n                        const startGrade =\n                            rowData[gradeFieldIndexes[\"Start grade\"]];\n                        const endGrade =\n                            rowData[gradeFieldIndexes[\"End grade\"]];\n                        let gradeRange = [];\n                        // console.log(startGrade, endGrade);\n\n                        // Lấy khoảng Grade\n                        if (startGrade && endGrade) {\n                            let startIndex = gradeLevels.indexOf(startGrade);\n                            let endIndex = gradeLevels.indexOf(endGrade);\n                            if (startIndex === -1 || endIndex === -1) {\n                                startIndex = newGradeLevels.indexOf(startGrade);\n                                endIndex = newGradeLevels.indexOf(endGrade);\n                                gradeRange = gradeLevels.slice(\n                                    startIndex,\n                                    endIndex + 1\n                                );\n                            } else {\n                                gradeRange = gradeLevels.slice(\n                                    startIndex,\n                                    endIndex + 1\n                                );\n                                //   console.log(gradeRange);\n                            }\n                        }\n\n                        const title = rowData[fieldIndexes[\"Title\"]];\n                        if(!title) return;\n\n                        // Lấy dữ liệu trên từng hàng ứng với các trường trong mảng fields[]\n                        const txtContentArray = fields.map((field) => {\n                            const cellValue =\n                                rowData[fieldIndexes[field]] || \"\";\n                            if (field === \"Tags\" || field === \"Topics\" || field === \"CCSS\" || field === \"Categories\") {\n                                if(cellValue) {\n\n                                    const dataParts = cellValue\n                                        .split(\",\")\n                                        .map((item) => `<${item.trim()}>`);\n                                    return `${field}:${dataParts.join(\", \")}`;\n                                }\n                            }\n                            if (field === \"Grade\") {\n                                return `Grade:${gradeRange.join(\", \")}`;\n                            } else {\n                                return `${field}:${\n                                    cellValue ? `<${cellValue}>` : \"\"\n                                }`;\n                            }\n                        });\n\n                        const txtBlob = new Blob([txtContentArray.join(\"\\n\")], {\n                            type: \"text/plain\",\n                        });\n                        const txtDownloadLink = URL.createObjectURL(txtBlob);\n                        txtFileLinks.push({title, link: txtDownloadLink});\n                    }\n                });\n\n                setConvertedTxtLinks(txtFileLinks);\n            };\n            reader.readAsArrayBuffer(selectedFile);\n        }\n    };\n\n    // Đánh dấu vị trí của các phần tử trong fields(đánh dấu vị trí cột)\n    const findFieldIndexes = (headerRow, fields) => {\n        const fieldIndexes = {};\n\n        headerRow.forEach((cellValue, columnIndex) => {\n            if (fields.includes(cellValue)) {\n                fieldIndexes[cellValue] = columnIndex;\n            }\n        });\n\n        return fieldIndexes;\n    };\n\n    // Đoạn này warning\n    const { getRootProps, getInputProps } = useDropzone({\n        onDrop,\n        accept: \".xlsx, .xls\",\n        maxFiles: 1,\n    });\n\n    const downloadZip = async () => {\n        if (convertedTxtLinks.length > 0) {\n            const zip = new JSZip();\n\n            await Promise.all(\n                convertedTxtLinks.map(({title,link}, index) => {\n                    const formatTitle = title.replace(/[/\\\\?%*:|\"<>]/g, \"-\"); // Thay thế các ký tự không hợp lệ khi đặt tên bằng dấu gạch ngang\n                    // const title = jsonDataRef.current[index+1][fieldIndexesRef.current[\"Title\"]];\n                    // const fileName = title ? `${title}.txt` : `data_${index + 1}.txt`; // Đặt tên tệp txt\n                    return fetch(link)\n                        .then((response) => response.blob())\n                        .then((blob) => {\n                            zip.file(`${formatTitle}.txt`, blob);\n                        });\n                })\n            );\n\n            zip.generateAsync({ type: \"blob\" }).then((content) => {\n                saveAs(content, `${zipFileName}.zip`);\n            });\n        }\n    };\n\n    return (\n        <div className=\"convert-tool\">\n            <div {...getRootProps()} className=\"dropzone\">\n                <input {...getInputProps()} />\n                <p>Kéo thả file Excel, hoặc Click để tải lên</p>\n            </div>\n            {selectedFile && (\n                <div className=\"selected-file\">\n                    <p>File đã chọn: {selectedFile.name}</p>\n                    <Button className=\"text-white\" onClick={convertExcelToTxt}>\n                        Chuyển đổi sang txt\n                    </Button>\n                </div>\n            )}\n            {convertedTxtLinks.length > 0 && (\n                <div className=\"download\">\n                    <p style={{ fontSize: \"13px\" }}>\n                        Converted {selectedFile.name}\n                    </p>\n\n                    <p>Nhập tên ZIP file</p>\n                    <input\n                        className=\"name-form\"\n                        type=\"text\"\n                        value={zipFileName}\n                        onChange={(e) => setZipFileName(e.target.value)}\n                    />\n\n                    <p>Tải về ZIP file</p>\n                    <Button className=\"text-white\" onClick={downloadZip}>\n                        Download\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default ExcelTool;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}